import connectDB from "../../lib/db";
import Order from "../../models/Order";
import { z } from "zod";
import nodemailer from "nodemailer";
import { schema } from "../../utils/validation";
import dotenv from "dotenv";
import { v2 as cloudinary } from "cloudinary";
import path from "path";
import url from "url";

dotenv.config();

const MAX_RECORDS = 30; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –≤ –±–∞–∑–µ
const COOLDOWN_TIME = 60 * 1000;

cloudinary.config({
  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,
  api_key: process.env.CLOUDINARY_API_KEY,
  api_secret: process.env.CLOUDINARY_API_SECRET,
});

export default async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ message: "–ú–µ—Ç–æ–¥ –Ω–µ —Ä–∞–∑—Ä–µ—à—ë–Ω" });
  }

  try {
    await connectDB();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞—è–≤–∫—É –æ—Ç —ç—Ç–æ–≥–æ email
    const lastOrder = await Order.findOne({ email: req.body.email }).sort({ createdAt: -1 });

    if (lastOrder && Date.now() - new Date(lastOrder.createdAt).getTime() < COOLDOWN_TIME) {
      return res.status(429).json({ message: "–ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–æ–π!" });
    }

    const order = new Order(req.body);
    await order.save();

    res.status(201).json({ message: "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!" });

  } catch (error) {
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
}

// üì© –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email
async function sendEmailNotification(data) {
  const transporter = nodemailer.createTransport({
    service: "Gmail",
    auth: {
      user: process.env.EMAIL_USER,
      pass: process.env.EMAIL_PASS,
    },
  });

  await transporter.sendMail({
    from: process.env.EMAIL_USER,
    to: process.env.EMAIL_RECEIVER,
    subject: "–ù–æ–≤—ã–π –∑–∞–∫–∞–∑",
    text: `–ò–º—è: ${data.name}
–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å: ${data.email}
VIN: ${data.vin || "–ù–µ —É–∫–∞–∑–∞–Ω"}
–°–æ–æ–±—â–µ–Ω–∏–µ: ${data.message || "–ë–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏—è"}
–§–∞–π–ª: ${data.fileUrl ? data.fileUrl : "–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω"}
–ó–∞–∫–∞–∑ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –∞–¥–º–∏–Ω–∫–µ: ${process.env.URL}/admin`,
  });

  console.log("‚úÖ Email —Å –∑–∞–∫–∞–∑–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω");
}
